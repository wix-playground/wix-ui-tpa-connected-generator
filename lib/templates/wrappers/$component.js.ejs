import React from 'react'
import {<%=componentName%>Ext} from '../../<%=consumerBasePath%>/<%=componentName%>/<%=componentName%>'

const {SettingsChangeObserver} = __non_webpack_require__('wix-ui-tpa-connected/dist/SettingsChangeObserver.js')
const {StyleInjector} = __non_webpack_require__('wix-ui-tpa-connected/dist/StyleInjector.js')

let projectVariableStructure = <%-projectVariableStructure%>;
let styles = `<%=COMPONENT_STYLES_PLACEHOLDER%>`;
let componentName = '<%=componentName%>';

export class <%=componentName%> extends React.Component {
  constructor(props) {
    super(props)
    const componentNamespace = `v${componentName}-${hashProps(JSON.stringify(props.settings))}`;
    const settingsObserver = new SettingsChangeObserver(window.Wix)
    const styleInjector = new StyleInjector(window.document, componentNamespace)
    styleInjector.addInitialCss(styles)

    this.namespacedClass = `${componentNamespace}${this.props.className ?  ' ' + this.props.className : ''}`;

    settingsObserver.forVariables(Object.values(props.settings))
      .updateOnChange(newStyles => {
        styleInjector.updateComponentStyle(props.settings, projectVariableStructure, newStyles)
      })
  }

  render() {
    return React.createElement(<%=componentName%>Ext, {...this.props, className: this.namespacedClass})
  }
}

function hashProps(propsAsString) {
    let h = 0xdeadbeef
    for (let i = 0; i < propsAsString.length; i++) {
      h = Math.imul(h ^ propsAsString.charCodeAt(i), 2654435761);
    }
    return (h ^ h >>> 16) >>> 0;
  }
